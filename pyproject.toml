[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "confluence-fastmcp"
version = "0.1.0"
description = "A FastMCP server for Atlassian Confluence integration"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10"
dependencies = [
    "fastmcp==2.6.0",
    "atlassian-python-api>=3.41.3",
    "httpx>=0.24.1",
    "backoff>=2.2.1",
    "python-dotenv>=1.0.0",
]

[tool.setuptools.packages]
find = {}

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
exclude = [
    "^client-with-OIDC-token\\.py$",
    "^client-with-local-proxy\\.py$",
    "^server-dev\\.py$",
]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py310"
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "N", # pep8-naming
]
lint.ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.21.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "ruff>=0.0.267",
    "ipykernel>=6.29.5",
    "pre-commit>=4.2.0",
    "coverage>=7.8.2",
    "pytest-cov>=6.1.1",
    "google-auth>=2.40.3",
    "pyjwt>=2.10.1",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=json",
    "--ignore=client-with-OIDC-token.py",
    "--ignore=client-with-local-proxy.py",
    "--ignore=server-dev.py",
]
pythonpath = [
  "."
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "*.egg-info/*",
    ".venv/*",
    "__pycache__/*",
    "test_*",
    "client-with-OIDC-token.py",
    "client-with-local-proxy.py",
    "server-dev.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 90
